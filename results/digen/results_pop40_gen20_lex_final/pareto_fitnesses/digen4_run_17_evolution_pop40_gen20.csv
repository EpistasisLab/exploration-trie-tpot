pipeline,cv_score,generation,holdout_score,holdout_roc_auc_score
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.001, MLPClassifier__learning_rate_init=0.1)",0.7826469668542839,0,0.8267941147032329,0.9181263136823141
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.001, MLPClassifier__learning_rate_init=0.1)",0.7826469668542839,1,0.8237914122710439,0.9045140626563908
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.001, MLPClassifier__learning_rate_init=0.1)",0.7826469668542839,2,0.7843559203282955,0.8886998298468622
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.05), MLPClassifier__alpha=0.001, MLPClassifier__learning_rate_init=0.1)",0.8492284240150093,2,0.9253828445601041,0.9405965368831949
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,3,0.7916124512060855,0.9019117205484938
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.05), MLPClassifier__alpha=0.1, MLPClassifier__learning_rate_init=0.1)",0.9264860850531582,3,0.9405464918426585,0.9404964468021217
"MLPClassifier(SelectFromModel(Binarizer(input_matrix, Binarizer__threshold=0.05), SelectFromModel__ExtraTreesClassifier__criterion=gini, SelectFromModel__ExtraTreesClassifier__max_features=0.8, SelectFromModel__ExtraTreesClassifier__n_estimators=100, SelectFromModel__threshold=0.05), MLPClassifier__alpha=0.001, MLPClassifier__learning_rate_init=0.1)",0.933894621638524,3,0.9502552297067361,0.9534080672605345
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,4,0.7976679011109999,0.898108297467721
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.05), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.943894621638524,4,0.9502552297067361,0.9394955459913922
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,5,0.8079771794615154,0.8998098288459613
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.05), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.943894621638524,5,0.9502552297067361,0.9434991492343109
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,6,0.801921729556601,0.8893003703332999
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.9541158536585366,6,0.8556701030927836,0.8991091982784506
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,7,0.8365028525673106,0.918626764087679
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,7,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,8,0.759433490141127,0.8799919927935141
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,8,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,9,0.8228405565008508,0.8985086577920128
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,9,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,10,0.8167851065959364,0.8941046942248023
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,10,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,11,0.8155840256230608,0.8789910919827845
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,11,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,12,0.7967670903813432,0.9119207286557901
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,12,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,13,0.8422580322290061,0.9249324391952758
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,13,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,14,0.8067760984886398,0.8852967670903813
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,14,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,15,0.8195375838254428,0.9124211790611552
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,15,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,16,0.8034230807726954,0.9016114503052748
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,16,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,17,0.8246922230007006,0.898008207386648
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,17,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,18,0.8438094284856371,0.921129016114503
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,18,1.0,1.0
"MLPClassifier(input_matrix, MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.1)",0.7875523764853034,19,0.7928135321789611,0.8841957761985787
"MLPClassifier(Binarizer(input_matrix, Binarizer__threshold=0.0), MLPClassifier__alpha=0.01, MLPClassifier__learning_rate_init=0.001)",0.99875,19,1.0,1.0
